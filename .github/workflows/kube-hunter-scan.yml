name: 'Kube-Hunter Scan

on:
  workflow_dispatch:
    inputs:
      kubeconfig_base64:
        description: 'Base64-encoded kubeconfig for the target cluster'
        required: true

jobs:
  kube-hunter-remote-scan:
    runs-on: ubuntu-latest
    
    steps:
      - name: 'Checkout Code'
        uses: actions/checkout@v4

      - name: 'Set up Kubeconfig from Manual Input'
        run: |
          echo "Setting up kubeconfig..."
          mkdir -p $HOME/.kube
          echo "${{ github.event.inputs.kubeconfig_base64 }}" | base64 --decode > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
          echo "Kubeconfig setup complete."
        # This step securely decodes the manually provided kubeconfig into the
        # runner's filesystem so kubectl can use it.

      - name: 'Get Cluster API Server Address'
        id: get_cluster_info
        run: |
          CLUSTER_ENDPOINT=$(kubectl config view --minify -o jsonpath='{.clusters[0].cluster.server}')
          echo "api_server=$CLUSTER_ENDPOINT" >> $GITHUB_OUTPUT
          echo "Discovered Cluster Endpoint: $CLUSTER_ENDPOINT"
        # This step uses kubectl to parse the kubeconfig and extract the server URL.
        # The URL is then passed to subsequent steps.

      - name: 'Run Kube-Hunter Scan on the Runner'
        run: |
          echo "Starting Kube-Hunter remote scan against ${{ steps.get_cluster_info.outputs.api_server }}..."
          # We run kube-hunter in a Docker container on the GitHub runner itself.
          # The --remote flag tells kube-hunter to perform an external scan.
          # The scan results are redirected from stdout to a JSON file.
          docker run --rm aquasec/kube-hunter \
            --remote ${{ steps.get_cluster_info.outputs.api_server }} \
            --report json \
            --log info > kube-hunter-results.json
          
          echo "Kube-Hunter scan completed."

      - name: 'Upload Scan Results as Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: kube-hunter-remote-scan-report
          path: kube-hunter-results.json
        # This step packages the results file and uploads it to the workflow run.

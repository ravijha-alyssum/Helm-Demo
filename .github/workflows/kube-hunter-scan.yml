name: 'Kube-Hunter Scan'

on:
  workflow_dispatch:
    inputs:
      kubeconfig_base64:
        description: 'Base64-encoded kubeconfig for the target cluster'
        required: true

jobs:
  kube-hunter-remote-scan:
    runs-on: ubuntu-latest
    
    steps:
      - name: 'Checkout Code'
        uses: actions/checkout@v4

      - name: 'Set up Kubeconfig from Manual Input'
        run: |
          echo "Setting up kubeconfig..."
          mkdir -p $HOME/.kube
          echo "${{ github.event.inputs.kubeconfig_base64 }}" | base64 --decode > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
          echo "Kubeconfig setup complete."

      - name: 'Get Cluster API Server Address'
        id: get_cluster_info
        run: |
          CLUSTER_ENDPOINT=$(kubectl config view --minify -o jsonpath='{.clusters[0].cluster.server}')
          echo "api_server=$CLUSTER_ENDPOINT" >> $GITHUB_OUTPUT
          echo "Discovered Cluster Endpoint: $CLUSTER_ENDPOINT"

      - name: 'Test Network Connectivity to API Server'
        run: |
          echo "Attempting to connect to the API server..."
          # The -k flag ignores certificate errors, which is fine for a simple connectivity test.
          # The --connect-timeout flag ensures the step doesn't hang for too long.
          # We are checking for any response, not necessarily a successful one.
          curl -k --connect-timeout 10 ${{ steps.get_cluster_info.outputs.api_server }}
          echo "Connectivity test complete. If the above command timed out, the runner cannot reach your cluster."

      - name: 'Run Kube-Hunter Scan on the Runner'
        run: |
          echo "Starting Kube-Hunter remote scan against ${{ steps.get_cluster_info.outputs.api_server }}..."
          docker run --rm aquasec/kube-hunter \
            --remote ${{ steps.get_cluster_info.outputs.api_server }} \
            --report json \
            --log info > kube-hunter-results.json
          
          echo "Kube-Hunter scan completed."

      - name: 'Upload Scan Results as Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: kube-hunter-remote-scan-report
          path: kube-hunter-results.json

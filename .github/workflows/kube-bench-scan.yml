name: Run kube-bench Scan 
on:
  workflow_dispatch:
    inputs:
      kube_config_b64:
        description: 'Base64 encoded kubeconfig data'
        required: true
        type: string

jobs:
  kube-bench-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.2'

      - name: Configure kubectl from workflow input
        run: |
          mkdir -p $HOME/.kube
          echo "${{ github.event.inputs.kube_config_b64 }}" | base64 --decode > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
          echo "kubectl configured successfully."

      - name: Run kube-bench job
        run: |
          # Apply the local, modified job manifest
          kubectl apply --force -f k8s/job.yaml
          echo "Waiting for kube-bench job to complete..."
          kubectl wait --for=condition=complete job/kube-bench --timeout=5m

      - name: Retrieve and Save Scan Results
        run: |
          POD_NAME=$(kubectl get pods --selector=job-name=kube-bench --output=jsonpath='{.items[0].metadata.name}')
          # Save the output as a .json file now
          echo "Saving results to kube-bench-results.json"
          kubectl logs $POD_NAME > kube-bench-results.json
          echo "Scan Results:"
          cat kube-bench-results.json

      - name: Upload kube-bench Scan Results as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: kube-bench-report-json
          path: kube-bench-results.json
          retention-days: 90

      - name: Upload Results to DefectDojo
        run: |
          curl -X POST "${{ secrets.DEFECTDOJO_URL }}/api/v2/import-scan/" \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_TOKEN }}" \
            -F "file=@kube-bench-results.json" \
            -F "scan_type=kube-bench Scan" \
            -F "engagement_name=Kube-bench" \
            -F "product_name=MyProduct" \
            -F "auto_create_context=true" 

      - name: Clean up the Job
        if: always()
        run: |
          echo "Deleting the kube-bench job..."
          kubectl delete job kube-bench --ignore-not-found=true

# .github/workflows/gitleaks-standalone.yml

name: 'Gitleaks Standalone Scan with DefectDojo Upload'

# This allows you to run the workflow manually from the Actions tab.
on:
  workflow_dispatch:
    inputs:
      repo_url:
        description: 'URL of the public GitHub repository to scan'
        required: true
        default: 'juice-shop/juice-shop'

jobs:
  gitleaks-scan-and-upload:
    name: 'Run Gitleaks Scan and Upload to DefectDojo'
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository you want to scan.
      - name: 'Checkout Repository'
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.repo_url }}
          fetch-depth: 0 # Get entire history for a full scan

      # Step 2: Manually download and run a license-free Gitleaks version.
      # This approach is the most reliable and bypasses issues with the v1 action.
      - name: 'Run Gitleaks Manually'
        run: |
          # 1. Download and extract a specific, license-free version of Gitleaks.
          GITLEAKS_VERSION="8.18.2"
          wget https://github.com/gitleaks/gitleaks/releases/download/v${GITLEAKS_VERSION}/gitleaks_${GITLEAKS_VERSION}_linux_x64.tar.gz
          tar -xzf gitleaks_${GITLEAKS_VERSION}_linux_x64.tar.gz
          
          # 2. Run the scan with explicit, direct commands.
          #    --source: Points to the directory to scan ('.').
          #    --report-path: The name of the output file.
          #    --report-format: The format of the report.
          #    --exit-code 0: This is critical. It ensures this step always succeeds
          #                 so the workflow can proceed to the upload steps.
          ./gitleaks detect --source="." --report-path="gitleaks-report.json" --report-format="json" --exit-code 0

      # Step 3: Upload the Gitleaks report as a workflow artifact for debugging.
      - name: 'Upload Gitleaks Report Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: gitleaks-report.json

      # Step 4: Upload the scan results to DefectDojo.
      - name: 'Upload to DefectDojo'
        # This step will now always work because the previous step guarantees
        # that 'gitleaks-report.json' is created.
        if: success()
        run: |
          curl -X POST "${{ secrets.DEFECTDOJO_URL }}/api/v2/import-scan/" \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_TOKEN }}" \
            -F "file=@gitleaks-report.json;type=application/json" \
            -F "scan_type=Gitleaks Scan" \
            -F "engagement_name=gitleaks-ci" \
            -F "product_name=MyProduct" \
            -F "auto_create_context=true"

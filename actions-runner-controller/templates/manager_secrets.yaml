{{- if and .Values.authSecret.create .Values.authSecret.github_token }}
apiVersion: v1
kind: Secret
metadata:
  # This now uses the nameOverride from values.yaml, which we set to "controller-manager"
  name: {{ include "actions-runner-controller.secretName" . }}
  namespace: {{ .Release.Namespace }}
  {{- if .Values.authSecret.annotations }}
  annotations:
    {{- toYaml .Values.authSecret.annotations | nindent 4 }}
  {{- end }}
  labels:
    {{- include "actions-runner-controller.labels" . | nindent 4 }}
type: Opaque
# --- This is the critical addition ---
# stringData makes it easy to add secret values without base64 encoding them first.
# Helm will handle the encoding when it creates the secret.
stringData:
  # This takes the token from your values.yaml and puts it in the secret
  # with the key 'github_token', which the pod expects.
  github_token: {{ .Values.authSecret.github_token | quote }}
{{- end }}
data:
{{- if .Values.authSecret.github_app_id }}
  # Keep this as a string as strings integrate better with things like AWS Parameter Store, see PR #882 for an example
  github_app_id: {{ .Values.authSecret.github_app_id | toString | b64enc }}
{{- end }}
{{- if .Values.authSecret.github_app_installation_id }}
  # Keep this as a string as strings integrate better with things like AWS Parameter Store, see PR #882 for an example
  github_app_installation_id: {{ .Values.authSecret.github_app_installation_id | toString | b64enc }}
{{- end }}
{{- if .Values.authSecret.github_app_private_key }}
  github_app_private_key: {{ .Values.authSecret.github_app_private_key | toString | b64enc }}
{{- end }}
{{- if .Values.authSecret.github_token }}
  github_token: {{ .Values.authSecret.github_token | toString | b64enc }}
{{- end }}
{{- if .Values.authSecret.github_basicauth_password }}
  github_basicauth_password: {{ .Values.authSecret.github_basicauth_password | toString | b64enc }}
{{- end }}
{{- end }}

# This is the full content for your kube-hunt-job.yml file

apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-bench
  labels:
    app: kube-bench
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-bench
  labels:
    app: kube-bench
rules:
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["get", "list", "watch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-bench
  labels:
    app: kube-bench
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-bench
subjects:
  - kind: ServiceAccount
    name: kube-bench
    namespace: default
---
apiVersion: batch/v1
kind: Job
metadata:
  name: kube-bench
  labels:
    app: kube-bench
spec:
  template:
    metadata:
      labels:
        app: kube-bench
    spec:
      hostPID: true
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Never
      serviceAccountName: kube-bench
      containers:
        - name: kube-bench
          image: docker.io/aquasec/kube-bench:v0.7.1
          command: ["kube-bench"]
          # This line ensures the output is JSON for DefectDojo
          args: ["--json"]
          volumeMounts:
            - name: var-lib-kubelet
              mountPath: /var/lib/kubelet
              readOnly: true
            - name: etc-systemd
              mountPath: /etc/systemd
              readOnly: true
            - name: etc-kubernetes
              mountPath: /etc/kubernetes
              readOnly: true
      volumes:
        - name: var-lib-kubelet
          hostPath:
            path: "/var/lib/kubelet"
        - name: etc-systemd
          hostPath:
            path: "/etc/systemd"
        - name: etc-kubernetes
          hostPath:
            path: "/etc/kubernetes"
